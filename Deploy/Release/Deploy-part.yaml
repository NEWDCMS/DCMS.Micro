apiVersion: apps/v1
kind: Deployment
metadata:
  name: accountservice
  namespace: dapreshop
  labels:
    app: accountservice
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: accountservice
  minReadySeconds: 5 
  strategy: 
    type: RollingUpdate 
    rollingUpdate:
      maxUnavailable: 1 
      maxSurge: 1
  template: 
    metadata:
      labels: 
        app: accountservice
        version: v1
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "accountservice"
        dapr.io/app-port: "80"
        dapr.io/config: "zipkin"
    spec:
      containers:
        - name: web
          image: accountservice:release
          env:
          - name: Logging__Console__FormatterName
            value: "" 
          imagePullPolicy: Never
          ports:
            - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goodsservice
  namespace: dapreshop
  labels:
    app: goodsservice
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: goodsservice
  minReadySeconds: 5 
  strategy: 
    type: RollingUpdate 
    rollingUpdate:
      maxUnavailable: 1 
      maxSurge: 1
  template: 
    metadata:
      labels: 
        app: goodsservice
        version: v1
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "goodsservice"
        dapr.io/app-port: "80"
        dapr.io/config: "zipkin"
    spec:
      containers:
        - name: web
          image: goodsservice:release
          env:
          - name: Logging__Console__FormatterName
            value: "" 
          imagePullPolicy: Never
          ports:
            - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tradeservice
  namespace: dapreshop
  labels:
    app: tradeservice
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: tradeservice
  minReadySeconds: 5 
  strategy: 
    type: RollingUpdate 
    rollingUpdate:
      maxUnavailable: 1 
      maxSurge: 1
  template: 
    metadata:
      labels: 
        app: tradeservice
        version: v1
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "tradeservice"
        dapr.io/app-port: "80"
        dapr.io/config: "zipkin"
    spec:
      containers:
        - name: web
          image: tradeservice:release
          env:
          - name: Logging__Console__FormatterName
            value: "" 
          imagePullPolicy: Never
          ports:
            - containerPort: 80


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apidocument
  namespace: dapreshop
  labels:
    app: apidocument
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: apidocument
  minReadySeconds: 5 
  strategy: 
    type: RollingUpdate 
    rollingUpdate:
      maxUnavailable: 1 
      maxSurge: 1
  template: 
    metadata:
      labels: 
        app: apidocument
    spec:
      containers:
        - name: web
          image: apidocument:release
          env:
          - name: Logging__Console__FormatterName
            value: "" 
          imagePullPolicy: Never
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: apidocument
  namespace: dapreshop
spec:
  selector:
    app: apidocument
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: dapreshop
  name: apidocument
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authentication,AuthIgnore'
spec:
  rules:
  - host: swagger.dapreshop.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: apidocument
            port:
              number: 80